install:

pybind: build file, then make install

eigen: sudo apt install libeigen3-dev

to install spdlog, you should install the spdlog-1.11.0
when build and install, run `cmake -DCMAKE_POSITION_INDEPENDENT_CODE=ON .. && make -j` to build the spdlog

pretrain models: ColBERT, https://downloads.cs.stanford.edu/nlp/data/colbert/colbertv2/colbertv2.0.tar.gz

when encountering the error: no CUDA runtime found, using CUDA_HOME = 'xxxx'
It may because of the incompatible version between CUDA and pytorch, the correct answer is to reinstall the pytorch and not do anything for the CUDA
A command that has worked before:
pip3 install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cu118

When using the colbert to connect to huggingface. If it report the error show that huggingface cannot connect, then please add the proxy for downloading.
The detail is to add the proxy configuration at the line 'loadedConfig  = AutoConfig.from_pretrained(name_or_path)' in ColBERT/colbert/modeling/hf_colbert.py
You can learn how to use the proxychains for climbing the "wall"

settings

# os.environ["CUDA_VISIBLE_DEVICES"] = ""
# export CUDA_VISIBLE_DEVICES=""
# in bash, setting CUDA_VISIBLE_DEVICES=0 to enable
# export CUDA_VISIBLE_DEVICES="0"

For Colbert, when want to use GPU for build index / retrieval, set total_visible_gpus in ColBERT/colbert/infra/config/settings, the total_visible_gpus variable

cmake -DCMAKE_BUILD_TYPE=Debug ..

if you find the error `AttributeError: module 'faiss' has no attribute 'StandardGpuResources'`,
or find the error about the matrix multiplication for calling the openblas
then you need to uninstall faiss-gpu in pip version and install the faiss-gpu using conda command
`pip install faiss-gpu-cu12`

/home/zhengbian/software/anaconda3/envs/sim_search/bin/pip


to install rapids/raft, use the conda to install
conda install -c rapidsai -c conda-forge -c nvidia libraft-headers cuda-version=12.8
conda install -c rapidsai -c conda-forge -c nvidia --override-channels libraft libraft-headers cuda-version=12.6
then link with the cublasLt

to install rapids/cuvs, build from source
./build.sh libcuvs --no-mg --allgpuarch


nsys profile --gpu-metrics-devices=all --gpu-metrics-set=ga10x-gfxt --gpuctxsw=true --stats=true -o GPGPU-lotte_profile /home/zhengbian/multi-vector-retrieval-gpu/build/GPGPU -username zhengbian -dataset lotte -method-name GPGPU -build-index-suffix n_centroid_131072-n_bit_2 -topk 10 -nprobe 8 -probe_topk 600

/home/zhengbian/multi-vector-retrieval-gpu/build/GPGPU -username zhengbian -dataset lotte -method-name GPGPU -build-index-suffix n_centroid_131072-n_bit_2 -topk 10 -nprobe 8 -probe_topk 600

ncu --metrics all /home/bianzheng/multi-vector-retrieval-gpu/build/GPGPU -username bianzheng -dataset lotte-500-gnd -method-name GPGPU -build-index-suffix n_centroid_2048-n_bit_2 -topk 10 -nprobe 64 -probe_topk 20


cmake -DZLIB_LIBRARY=/usr/lib/x86_64-linux-gnu/libz.so -DCMAKE_POLICY_VERSION_MINIMUM=3.5 ..